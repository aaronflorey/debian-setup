---
- name: Remove cdrom entries in /apt/sources/list
  lineinfile:
    path: /etc/apt/sources.list
    state: absent
    regexp: '^deb cdrom'
  notify: [Update APT]
  become: true

# Flush handlers for previous task.
- meta: flush_handlers

# Make sure relevant system and desktop support packages are installed.
- name: Ensure system packages
  apt: 
    state: latest
    name:
      - gpg
      - plymouth
      - plymouth-themes
      - gnome-core
      - gdm3
      - gnome-color-manager
      - gnome-tweaks
      - gnome-menus
      - libcanberra-gtk-module
      - arc-theme
      - papirus-icon-theme
      - openssh-server
      - openssh-client
      - openvpn
      - file-roller
      - network-manager
      - network-manager-gnome
      - network-manager-openvpn
      - network-manager-openvpn-gnome
      - resolvconf
      - dnsmasq
      - dnsutils
      - debian-archive-keyring
      - curl
      - wget
      - gnupg
      - apt-transport-https
      - git
      - git-extras
      - whois
      - traceroute
      - htop
      - zip
      - unzip
      - p7zip
      - zsh
      - nftables
      - hexedit
      - debian-goodies
      - debsums
      - debsecan
      - libpam-tmpdir
      - apt-listbugs
      - flatpak
      - gnome-software-plugin-flatpak
      - terminator
  become: true

# Ensure relevant APT keys are present on the system to support extra repositories added later.
- name: Add apt keys
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: '{{item}}'
  loop:
    - '9DC858229FC7DD38854AE2D88D81803C0EBFCD88' # Docker
    - '72ECF46A56B4AD39C907BBB71646B01B86E50310' # Yarn
    - '4CCA1EAF950CEE4AB83976DCA040830F7FAC5991' # Google-1
    - 'EB4C1BFD4F042F6DDDCCEC917721F63BD38B4796' # Google-2
    - '15058500A0235D97F5D10063B188E2B695BD4743' # deb.sury.org
  become: true

- name: Add an Apt signing key, uses whichever key is at the URL
  apt_key:
    url: {{item}}
    state: present
  with_items:
    - https://insomnia.rest/keys/debian-public.key.asc
    - https://bintray.com/user/downloadSubjectPublicKey?username=bintray

# Enable extra repositories needed on the system. Mostly development, productivity etc.
- name: Enable extra repos
  apt_repository: filename='{{item.file}}' repo='{{item.repo}}' state=present
  loop:
    - {file: 'docker', repo: 'deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable'}
    - {file: 'yarn', repo: 'deb https://dl.yarnpkg.com/debian/ stable main'}
    - {file: 'google-chrome', repo: 'deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main'}
    - {file: 'php-sury-org', repo: 'deb https://packages.sury.org/php/ {{ansible_distribution_release}} main'}
    - {file: 'insomnia', repo: 'deb https://dl.bintray.com/getinsomnia/Insomnia'}
    - {file: 'beekeeper', repo: 'deb https://dl.bintray.com/beekeeper-studio/releases disco main'}
  become: true

- name: Ensure my packages
  apt: 
    state: present
    update_cache: yes
    name:
      - make
      - cmake
      - openvpn
      - meld
      - docker-ce
      - python3
      - python3-pip
      - nodejs
      - yarn
      # PHP 7.4
      - php7.4-cli
      - php7.4-mbstring
      - php7.4-mysql
      - php7.4-memcached
      - php7.4-curl
      - php7.4-iconv
      - php7.4-intl
      - php7.4-json
      - php7.4-pdo
      - php7.4-xml
      - php7.4-apcu
      - filezilla
      - vlc
      - virt-manager
      - libcurl4-gnutls-dev
      - libarchive-dev
      - libssh-dev
      - libgit2-dev
      - dconf-editor
      - gnome-shell-extensions
      - gnome-shell-extension-system-monitor
      - gnome-tweaks
      - python3-psutil
      - insomnia
      - beekeeper-studio
  become: true

- name: install deb files
  apt: deb={{item}} state=present
  with_items:
    - https://updates.getmailspring.com/download?platform=linuxDeb
    - https://www.termius.com/download/linux/Termius.deb
    - https://github.com/Ulauncher/Ulauncher/releases/download/5.8.1/ulauncher_5.8.1_all.deb
  become: true

- name: Ensure system files
  copy: src='{{item.src}}'  dest='{{item.dest}}' mode='0644' owner='root' group='root'
  loop:
    - {src: menu-icon.svg, dest: /etc/menu-icon.svg} # Used by Arc Menu GNOME extension.
    - {src: wallpaper.png, dest: /etc/wallpaper.png} # System default wallpaper
    - {src: issue, dest: /etc/issue} # System banner
    - {src: issue.net, dest: /etc/issue.net} # System banner - for network clients
    - {src: motd, dest: /etc/motd} # User motd
  become: true

# Configure network manager
- name: Copy NetworkManager.conf
  copy: src=NetworkManager.conf dest=/etc/NetworkManager/NetworkManager.conf mode='0644' owner=root group=root
  notify: [Restart NetworkManager]
  become: true

# Configure SSH server
- name: Copy sshd_config
  copy: src=sshd_config dest=/etc/ssh/sshd_config mode='0644' owner=root group=root
  notify: [Restart sshd]
  become: true

# Configure local caching DNS
- name: Copy dnsmasq config
  copy: src=dnsmasq.conf dest=/etc/dnsmasq.d/local.conf mode='0644' owner=root group=root
  notify: [Restart dnsmasq]
  become: true

# Ensure network interfaces are scanned in certain order for resolvconf
- name: Copy interface-order
  copy: src=interface-order dest=/etc/resolvconf/interface-order mode='0644' owner=root group=root
  notify: [Update resolvconf]
  become: true

# Configure default system UMASK (https://wiki.debian.org/Permissions)
- name: Ensure default umask
  lineinfile:
    path: /etc/pam.d/common-session
    line: 'session optional pam_umask.so umask=022'
  become: true

# Configure boot screen
- name: Copy plymouthd.conf
  copy: src=plymouthd.conf dest=/etc/plymouth/plymouthd.conf mode='0644' owner=root group=root
  notify: [Update initramfs]
  become: true

- name: Install oh-my-zsh for self
  git: repo='https://github.com/ohmyzsh/ohmyzsh' dest='/home/{{host_username}}/.oh-my-zsh'

- name: oh-my-zsh autosuggestions
  git: repo='https://github.com/zsh-users/zsh-autosuggestions' dest='/home/{{host_username}}/.oh-my-zsh/plugins/zsh-autosuggestions'
  
- name: Install powerlevel10k for self
  git: repo='https://github.com/romkatv/powerlevel10k.git' dest='/home/{{host_username}}/.oh-my-zsh/themes/powerlevel10k'

- name: Install fonts
  copy: src=fonts/ dest=/usr/local/share/fonts
  become: true

# Configure firewall
- name: Install nftables.conf
  copy: src=nftables.conf dest=/etc/nftables.conf
  notify: [Reload nftables]
  become: true

- name: Ensure group "docker" exists
  group:
    name: docker
    state: present
  become: true

# Ensure own user settings
- name: Update own user
  user:
    name: '{{host_username}}'
    shell: /bin/zsh
    groups: docker
    append: yes
    create_home: yes
    password: '*' # Initial password is none, account locked
    update_password: on_create # Do not reset password from ansible
  become: true

- name: Ensure home directory has correct permissions
  file: path='/home/{{host_username}}/' state=directory mode='0700' owner='{{host_username}}' group='{{host_username}}'
  become: true

- name: Create ~/.ssh/
  file: path='/home/{{host_username}}/.ssh' state=directory mode='0700' owner='{{host_username}}' group='{{host_username}}'
  become: true

- name: Ensure personal dot files
  copy: src='{{item.src}}'  dest='{{item.dest}}' mode='0600' owner='{{host_username}}' group='{{host_username}}'
  loop:
    - {src: dots/zshrc.zsh, dest: '/home/{{host_username}}/.zshrc'}
    - {src: dots/editorconfig, dest: '/home/{{host_username}}/.editorconfig'}
    - {src: dots/wgetrc, dest: '/home/{{host_username}}/.wgetrc'}
    - {src: dots/gitignore, dest: '/home/{{host_username}}/.gitignore'}
    - {src: dots/curlrc, dest: '/home/{{host_username}}/.curlrc'}
    - {src: dots/p10k, dest: '/home/{{host_username}}/.p10k.zsh'}

- name: Ensure personal files (from templates)
  template: src='{{item.src}}'  dest='{{item.dest}}' mode='0600' owner='{{host_username}}' group='{{host_username}}'
  loop:
    - {src: dots/gitconfig, dest: '/home/{{host_username}}/.gitconfig'}

- name: Install ssh keys
  get_url:
    url: https://github.com/aaronflorey.keys
    dest: '/home/{{host_username}}/.ssh/authorized_keys'
    mode: 0600
    owner: '{{host_username}}'
    group: '{{host_username}}'

- name: Ensure default directories in home
  file: path='{{item}}' state=directory mode='0700' owner='{{host_username}}' group='{{host_username}}'
  loop:
    - '/home/{{host_username}}/dots'
  become: true

# Configure icons in Nautilus for some directories.
# - name: Set home folder icons
#   shell: 'gio set -t string {{item.dir}} metadata::custom-icon file://{{item.icon}}'
#   changed_when: false # Really not that important...
#   loop:
#     - {dir: '/home/{{host_username}}/dots', icon: '/usr/share/icons/Papirus/64x64/places/folder-orange-development.svg'}

# Install python extra packages and ensure they are up to date.
- name: Ensure pip3 packages
  pip: name='{{item}}' executable=pip3 state=latest
  with_items:
    # - ansible # Yo dawg i herd you like Ansible so we put a Ansible in yo Ansible so you can automate while u automate
    - pipenv
    - docker-compose
    - awscli
  become: true

# Make sure system services we explicitly need are running and enabled.
- name: Enable services
  service: name='{{item}}' state=started enabled=yes
  loop:
    - gdm
    - sshd
    - dnsmasq
    - resolvconf
    - nftables
  become: yes

# Disable services we do not need.
- name: Disable services
  service: name='{{item}}' state=stopped enabled=no
  loop:
    - systemd-networkd
    - systemd-resolved
  become: yes

- name: Install Node global packages (yarn)
  yarn: name='{{item}}' global=yes state=latest production=yes
  loop:
    - '@vue/cli'
  changed_when: false # ignore
  become: true

- name: Install composer globally
  script:
    cmd: scripts/composer-setup.sh
    chdir: /tmp
  changed_when: false # ignore
  become: true

- name: Install flatpak apps
  become: true
  flatpak:
    name: 
      - org.mozilla.firefox
      - com.spotify.Client
      - com.jetbrains.PhpStorm
      - com.axosoft.GitKraken
      - com.visualstudio.code
      - com.slack.Slack
      - com.discordapp.Discord